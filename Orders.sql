-- Table: public.Orders

-- DROP TABLE IF EXISTS public."Orders";

CREATE TABLE IF NOT EXISTS public."Orders"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    total_price numeric,
    note character varying(1000) COLLATE pg_catalog."default",
    create_by integer NOT NULL,
    store_id integer NOT NULL,
    create_at timestamp without time zone NOT NULL,
    update_at timestamp without time zone,
    type integer NOT NULL,
    customer_id integer,
    discount_membership numeric,
    final_price numeric,
    status_id boolean NOT NULL,
    CONSTRAINT "PK_Orders" PRIMARY KEY (id),
    CONSTRAINT "FK_Orders_Customers_customer_id" FOREIGN KEY (customer_id)
        REFERENCES public."Customers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Orders_Order_types_type" FOREIGN KEY (type)
        REFERENCES public."Order_types" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT "FK_Orders_Stores_store_id" FOREIGN KEY (store_id)
        REFERENCES public."Stores" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT "FK_Orders_Users_create_by" FOREIGN KEY (create_by)
        REFERENCES public."Users" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Orders"
    OWNER to postgres;
-- Index: IX_Orders_create_by

-- DROP INDEX IF EXISTS public."IX_Orders_create_by";

CREATE INDEX IF NOT EXISTS "IX_Orders_create_by"
    ON public."Orders" USING btree
    (create_by ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Orders_customer_id

-- DROP INDEX IF EXISTS public."IX_Orders_customer_id";

CREATE INDEX IF NOT EXISTS "IX_Orders_customer_id"
    ON public."Orders" USING btree
    (customer_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Orders_store_id

-- DROP INDEX IF EXISTS public."IX_Orders_store_id";

CREATE INDEX IF NOT EXISTS "IX_Orders_store_id"
    ON public."Orders" USING btree
    (store_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Orders_type

-- DROP INDEX IF EXISTS public."IX_Orders_type";

CREATE INDEX IF NOT EXISTS "IX_Orders_type"
    ON public."Orders" USING btree
    (type ASC NULLS LAST)
    TABLESPACE pg_default;

-- Trigger: calculate_discount_membership_and_final_price_trigger

-- DROP TRIGGER IF EXISTS calculate_discount_membership_and_final_price_trigger ON public."Orders";

CREATE TRIGGER calculate_discount_membership_and_final_price_trigger
    BEFORE UPDATE 
    ON public."Orders"
    FOR EACH ROW
    WHEN (old.customer_id IS DISTINCT FROM new.customer_id OR old.total_price IS DISTINCT FROM new.total_price)
    EXECUTE FUNCTION public.calculate_discount_membership_and_final_price();