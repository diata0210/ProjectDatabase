@model UserStoreViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pageSize = 5;
    var pageCount = (int)Math.Ceiling(Model.Users!.Count() / (double)pageSize);
    var currentPage = Context.Request.Query["page"].ToString() != "" ? Convert.ToInt32(Context.Request.Query["page"]) : 1;
    var startPage = Math.Max(currentPage - 2, 1);
    var endPage = Math.Min(currentPage + 2, pageCount);
    IEnumerable<User> filteredUsers = Model!.Users!;
    var filter = Context.Request.Query["filter"].ToString();
    if (filter == "all" || filter == "")
    {
        filteredUsers = Model!.Users!;
    }
    else
    {
       filteredUsers = Model.Users!.Where(u => u.store_id.ToString() == filter); 
    }
    

}
<div class="flex justify-between h-full">
    <a asp-area=" " asp-controller="Users" asp-action="Index" >List Users</a>

    <select class="p-2 border border-[1px] outline-none" id="selected" onchange="filterByStore()">
        <option value="all">-- Tất cả --</option>
        @foreach(var value in Model.Stores!.OrderBy(x => x.id)){
            <option value="@value.id">@value.name</option>
        }
    </select>
    <a asp-action="Create" class="text-blue-500 hover:text-blue-600 ">
        <span title="Add new user">
            <svg width="20px" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
        </span>
    </a>
</div>
<div class=" overflow-auto mt-3">
    <table class="min-w-full table-fixed divide-y divide-gray-200">
        <thead>
            <tr class="bg-gray-50">

                <th scope="col" class="w-1/9 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID
                </th>
                <th scope="col" class="w-1/7 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">UserName</th>

                <th scope="col" class="w-1/7 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Password</th>
                <th scope="col" class="w-1/6 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>

                <th scope="col" class="w-1/6 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>

                <th scope="col" class="w-1/7 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>

                <th scope="col" class="w-1/5 px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Store</th>
                <th scope="col" class="w-1/8 px-2 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Operate</th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var item in filteredUsers!.OrderBy(x => x.id).Skip((currentPage - 1) * pageSize).Take(pageSize))
            {
                <tr class="border-b-[1px] h-28">
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.id)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.username)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.password)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.name)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.phone)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.Role!.name)

                    </td>
                    <td class="px-2 py-4 text-left">
                        @Html.DisplayFor(modelItem => item.Store!.name)

                    </td>
                    <td class="px-2 py-4 text-center">
                        <div class="flex justify-center">
                        <a asp-action="Edit" asp-route-id="@item.id" class="text-blue-500 hover:text-blue-600">

                            <span title="Edit">
                                <svg width="16px" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
                                </svg>
                            </span>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.id" class="text-blue-500 hover:text-blue-600">
                            <span title="Delete">
                                <svg width="16px" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                                </svg>
                            </span>
                        </a>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination gap-10 flex items-center justify-center space-x-2 mt-4">
        @if (pageCount > 1)
        {
            @if (currentPage > 1)
            {
                <a href="?filter=@filter&page=1" class="page-link bg-blue-500 text-white px-4 py-2 rounded">First</a>
                <a href="?filter=@filter&page=@(currentPage - 1)" class="page-link bg-blue-500 text-white px-4 py-2 rounded">Previous</a>
            }

            @for (var i = startPage; i <= endPage; i++)
            {
                <a href="?filter=@filter&page=@i" class="page-link bg-gray-200 text-blue-500 px-4 py-2 rounded @(i == currentPage ? "font-bold" : "")">@i</a>
            }

            @if (currentPage < pageCount)
            {
                <a href="?filter=@filter&page=@(currentPage + 1)" class="page-link bg-blue-500 text-white px-4 py-2 rounded">Next</a>
                <a href="?filter=@filter&page=@pageCount" class="page-link bg-blue-500 text-white px-4 py-2 rounded">Last</a>
            }
        }
    </div>

</div>

<script>
    var filter = "@filter";
    var dropdown = document.getElementById("selected");

    for (var i = 0; i < dropdown.options.length; i++) {
        if (filter === dropdown.options[i].value) {
            dropdown.options[i].selected = true;
            break;
        }
    }

    function filterByStore() {
        var select = document.getElementById("selected").value;
        window.location.href = "?filter=" + select;
    }
</script>