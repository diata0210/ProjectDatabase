@model ProjectDatabase.Models.OrderOrderlineModelView
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    int k = 0;
}

<h1 class="text-2xl font-bold text-center">Create Order</h1>

<div class="flex justify-center">
    <div class="w-2/3">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-4">
                <label asp-for="Order!.customer_id" class="block mb-1 font-bold">Customer</label>
                <select asp-for="Order!.customer_id" class="w-full p-3 border border-gray-300 rounded" asp-items="ViewBag.customer_id"></select>
            </div>
            <div class="flex items-center gap-2">
                <div class="mb-4 w-3/4">
                    <label  class="block mb-1 font-bold">Product</label>
                    <select  class="w-full p-3 border border-gray-300 rounded" onchange="getProductStore()" id="productSelect">
                        <option value="">-- Select Product --</option>
                        @foreach (var item in Model!.Store_product!)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block mb-1 font-bold">Stock</label>
                    <input class="w-full p-2 border border-gray-300 rounded" readonly id="stockInput" />
                </div>

                <div class="mb-4">
                    <label  class="block mb-1 font-bold">Quantity</label>
                    <input class="w-full p-2 border border-gray-300 rounded" id="quantityInput" />
                </div>
                <div class="flex items-center mt-4" onclick="AddnewProdtoOrder()">
                    <svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </div>
            </div>
            <div id="select" class="flex flex-col">
            </div>
            <div class="mb-4">
                <label class="block mb-1 font-bold">
                    <input class="form-check-input" asp-for="Order!.status_id" />
                    Status
                </label>
            </div>
            <div class="mb-4">
                <label asp-for="Order!.note" class="block mb-1 font-bold"></label>
                <input asp-for="Order!.note" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.note" class="text-danger"></span>
            </div>
            <div class="mb-4 w-full">

                <label asp-for="Order!.create_by" class="block mb-1 font-bold">Create By</label>
                <input type="text" class="w-full p-2 border border-gray-300 rounded" readonly value="@ViewBag.create_by.Text" />
                <input type="hidden" asp-for="Order!.create_by" value="@ViewBag.create_by.Value" />
            </div>

            <div class="mb-4">
                @if (User.IsInRole("1"))
                {
                    <label asp-for="Order!.store_id" class="block mb-1 font-bold">Stores</label>
                    <select asp-for="Order!.store_id" class="w-full p-3 border border-gray-300 rounded" asp-items="Model.Store" id="storeSelect" onchange="getProductId()">
                        <option value="">-- Select Store --</option>
                    </select>
                }
                else
                {
                    <label asp-for="Order!.store_id" class="block mb-1 font-bold">Stores</label>
                    <input type="text" class="w-full p-2 border border-gray-300 rounded" readonly value="@ViewBag.store_id.Text" />
                    <input type="hidden" asp-for="Order!.store_id" value="@ViewBag.store_id.Value" id="storeSelect" />
                }
            </div>
            <div class="mb-4">
                <label asp-for="Order!.create_at" class="block mb-1 font-bold">Create at</label>
                <input asp-for="Order!.create_at" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.create_at" class="text-danger"></span>
            </div>
            <div class="mb-4">
                <label asp-for="Order!.update_at" class="block mb-1 font-bold">Update at</label>
                <input asp-for="Order!.update_at" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.update_at" class="text-danger"></span>
            </div>
            <div class="mb-4">
                <label asp-for="Order!.type" class="block mb-1 font-bold">Type</label>
                <select asp-for="Order!.type" class="w-full p-3 border border-gray-300 rounded" asp-items="ViewBag.type"></select>
            </div>
            <div class="flex justify-center">
                <button type="submit" value="Create" class="w-full px-4 py-2 bg-blue-500 text-white font-semibold rounded hover:bg-blue-600">Create</button>
            </div>
        </form>
    </div>
</div>

<div class="mt-4 text-center">
    <a asp-action="Index" class="text-blue-500 hover:text-blue-600 underline">Back to List</a>
</div>

@section Script {
    <script>
        var k = 0;
        function AddnewProdtoOrder() {
            var selectContainer = document.getElementById('select');
            console.log(k);
            // Lấy giá trị sản phẩm đã chọn và số lượng đã chọn
            var selectedProduct = document.getElementById('productSelect').value;
            console.log(selectedProduct);
            var selectedQuantity = document.getElementById('quantityInput').value;

            // Tạo chuỗi HTML chứa thông tin sản phẩm và số lượng
            var htmlContent = ' \
                <div class="flex item-center justify-between"> \
                    <div class="mb-4 w-3/4"> \
                        <label name="Orderline[' + k + '].product_id" class="block mb-1 font-bold">Product</label> \
                        <input name="Orderline[' + k + '].product_id" class="w-full p-2 border border-gray-300 rounded" value="'+ selectedProduct + '" id="select-'+k+'" /> \
                    </div> \
                    <div class="mb-4"> \
                        <label name="Orderline[' + k + '].quantity" class="block mb-1 font-bold">Quantity</label> \
                        <input name="Orderline[' + k + '].quantity" class="w-full p-2 border border-gray-300 rounded" value="' + selectedQuantity + '" id="select-'+k+'"/> \
                    </div>\
                </div>';
            k++;
            selectContainer.insertAdjacentHTML('beforeend', htmlContent);

        }


        function getProductStore() {
            var productId = document.getElementById('productSelect').value;
            var storeId = document.getElementById('storeSelect').value;

            $.ajax({
                url: '/Orders/GetQuantityProduct',
                type: 'POST',
                data: { productId: productId, storeId: storeId },
                success: function (res) {
                    document.getElementById('stockInput').value = res;

                },
                error: function () {
                    console.log("fail post storeId to controller");

                }
            })
        }
        function getProductId() {
            var productId = document.getElementById('productSelect').value;
            var storeId = document.getElementById('storeSelect').value;
            var orderViewModel = @Html.Raw(Json.Serialize(Model)); // Chuyển đổi Model thành đối tượng JavaScript

            $.ajax({
                url: '/Orders/GetStoreId',
                type: 'POST',
                data: {
                    storeId: storeId
                },
                success: function (res) {
                    var selectElement = document.getElementById('productSelect');
                    selectElement.innerHTML = '';
                    var defaultOption = document.createElement('option');
                    defaultOption.value = '';
                    defaultOption.text = '-- Search Product --';
                    selectElement.appendChild(defaultOption);
                    for (var i = 0; i < res.length; i++) {
                        var option = document.createElement('option');
                        option.value = res[i].value;
                        option.text = res[i].text;
                        selectElement.appendChild(option);
                    }

                    console.log(res);
                },
                error: function () {
                    console.log("fail post ");
                }
            });


            $.ajax({
                url: '/Orders/GetQuantityProduct',
                type: 'POST',
                data: { productId: productId, storeId: storeId },
                success: function (res) {
                    document.getElementById('stockInput').value = res;

                },
                error: function () {
                    console.log("fail post ");

                }
            })
        }
    </script>

}
