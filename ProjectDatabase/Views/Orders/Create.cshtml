@model ProjectDatabase.Models.OrderOrderlineModelView
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int k = 0;
}

<h1 class="text-2xl font-bold text-center">Create Order</h1>

<div class="flex justify-center">
    <div class="w-2/3">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-4">
                <label asp-for="Order!.customer_id" class="block mb-1 font-bold">Customer</label>
                <select asp-for="Order!.customer_id" class="w-full p-3 border border-gray-300 rounded" asp-items="ViewBag.customer_id"></select>
            </div>
            <div class="flex items-center gap-2">
                <div class="mb-4 w-3/4">
                    <label asp-for="Orderline[k].product_id" class="block mb-1 font-bold">Product</label>
                    <select asp-for="Orderline[k].product_id" class="w-full p-3 border border-gray-300 rounded productSelect" id="productSelect_@k" onchange="getProductStore()" data-index="@k">
                        <option value="">-- Select Product --</option>
                        @foreach (var item in Model!.Store_product!)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block mb-1 font-bold">Stock</label>
                    <input class="w-full p-2 border border-gray-300 rounded stockInput" readonly data-index="@k" />
                </div>

                <div class="mb-4">
                    <label asp-for="Orderline[k].quantity" class="block mb-1 font-bold">Quantity</label>
                    <input asp-for="Orderline[k].quantity" class="w-full p-2 border border-gray-300 rounded quantityInput" placeholder="quantity" id="quantityInput_@k" data-index="@k" />
                </div>
                <div class="flex items-center mt-4" onclick="AddnewProdtoOrder()">
                    <svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </div>
            </div>
            <div class="selectContainer flex flex-col"></div>
            <div class="mb-4">
                <label class="block mb-1 font-bold">
                    <input class="form-check-input" asp-for="Order!.status_id" />
                    Status
                </label>
            </div>
            <div class="mb-4">
                <label asp-for="Order!.note" class="block mb-1 font-bold"></label>
                <input asp-for="Order!.note" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.note" class="text-danger"></span>
            </div>
            <div class="mb-4 w-full">
                <label asp-for="Order!.create_by" class="block mb-1 font-bold">Create By</label>
                <input type="text" class="w-full p-2 border border-gray-300 rounded" readonly value="@ViewBag.create_by.Text" />
                <input type="hidden" asp-for="Order!.create_by" value="@ViewBag.create_by.Value" />
            </div>

            <div class="mb-4">
                @if (User.IsInRole("1"))
                {
                    <label asp-for="Order!.store_id" class="block mb-1 font-bold">Stores</label>
                    <select asp-for="Order!.store_id" class="w-full p-3 border border-gray-300 rounded storeSelect" asp-items="Model.Store" onchange="getProductId()" data-index="@k">
                        <option value="">-- Select Store --</option>
                    </select>
                }
                else
                {
                    <label asp-for="Order!.store_id" class="block mb-1 font-bold">Stores</label>
                    <input type="text" class="w-full p-2 border border-gray-300 rounded" readonly value="@ViewBag.store_id.Text" />
                    <input type="hidden" asp-for="Order!.store_id" value="@ViewBag.store_id.Value" class="storeSelect" data-index="@k" />
                }
            </div>
            <div class="mb-4">
                <label asp-for="Order!.create_at" class="block mb-1 font-bold">Create at</label>
                <input asp-for="Order!.create_at" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.create_at" class="text-danger"></span>
            </div>
            <div class="mb-4">
                <label asp-for="Order!.update_at" class="block mb-1 font-bold">Update at</label>
                <input asp-for="Order!.update_at" class="w-full p-2 border border-gray-300 pl-3 rounded" />
                <span asp-validation-for="Order!.update_at" class="text-danger"></span>
            </div>
            <div class="mb```
        <div class="mb-4">
            <label asp-for="Order!.type" class="block mb-1 font-bold">Type</label>
            <select asp-for="Order!.type" class="w-full p-3 border border-gray-300 rounded" asp-items="ViewBag.type"></select>
        </div>
        <div class="flex justify-center">
            <button type="submit" value="Create" class="w-full px-4 py-2 bg-blue-500 text-white font-semibold rounded hover:bg-blue-600">Create</button>
        </div>
        </form>
    </div>
</div>

<div class="mt-4 text-center">
    <a asp-action="Index" class="text-blue-500 hover:text-blue-600 underline">Back to List</a>
</div>

<script>
    function AddnewProdtoOrder() {
        var k = document.getElementsByClassName('productSelect').length;
        var selectContainer = document.getElementsByClassName('selectContainer')[0];

        // Lấy giá trị sản phẩm đã chọn và số lượng đã chọn
        var selectedProduct = document.getElementsByClassName('productSelect')[k - 1].value;
        var selectedQuantity = document.getElementsByClassName('quantityInput')[k - 1].value;

        // Tạo chuỗi HTML chứa thông tin sản phẩm và số lượng
        var infoHTML = '<div class="mb-4 flex items-center justify-between gap-2">';
        infoHTML += '<p>Product: ' + selectedProduct + '</p>';
        infoHTML += '<p>Quantity: ' + selectedQuantity + '</p>';
        infoHTML += '<svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">';
        infoHTML += '<path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />';
        infoHTML += '</svg>';
        infoHTML += '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">';
        infoHTML += '<path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />';
        infoHTML += '</svg>';
        infoHTML += '</div>';

        // Thêm chuỗi HTML vào phần tử cha (selectContainer)
        selectContainer.insertAdjacentHTML('beforeend', infoHTML);
    }

    function getProductStore() {
        var productSelect = event.target;
        var index = productSelect.getAttribute('data-index');
        var stockInput = document.getElementsByClassName('stockInput')[index];

        var productId = productSelect.value;
        var storeId = document.getElementsByClassName('storeSelect')[index].value;

        $.ajax({
            url: '/Orders/GetQuantityProduct',
            type: 'POST',
            data: { productId: productId, storeId: storeId },
            success: function (res) {
                stockInput.value = res;
            },
            error: function () {
                console.log("Failed to post storeId to controller");
            }
        });
    }

    function getProductId() {
        var storeSelect = event.target;
        var index = storeSelect.getAttribute('data-index');
        var productSelect = document.getElementsByClassName('productSelect')[index];

        var productId = productSelect.value;
        var storeId = storeSelect.value;

        $.ajax({
            url: '/Orders/GetStoreId',
            type: 'POST',
            data: { storeId: storeId },
            success: function (res) {
                var selectElement = productSelect;
                selectElement.innerHTML = '';
                var defaultOption = document.createElement('option');
                defaultOption.value = '';
                defaultOption.text = '-- Search Product --';
                selectElement.appendChild(defaultOption);
                for (var i = 0; i < res.length; i++) {
                    var option = document.createElement('option');
                    option.value = res[i].value;
                    option.text = res[i].text;
                    selectElement.appendChild(option);
                }
            },
            error: function () {
                console.log("Failed to post storeId to controller");
            }
        });

        $.ajax({
            url: '/Orders/GetQuantityProduct',
            type: 'POST',
            data: { productId: productId, storeId: storeId },
            success: function (res) {
                var stockInput = document.getElementsByClassName('stockInput')[index];
                stockInput.value = res;
            },
            error: function () {
                console.log("Failed to post storeId to controller");
            }
        });
    }
</script>
